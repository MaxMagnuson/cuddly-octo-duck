package Functions;

import dataTypes.IDataType;
import java.util.ArrayList;

public class Add implements IStackObject {
	
	public Add()
	{
		
	}
	
	@Override
	public ArrayList<String> Process(ArrayList<IDataType> input)
	{
		ArrayList<String> output = new ArrayList<String>();
		
		ArrayList<IDataType> params = new ArrayList<IDataType>();
		ArrayList<IDataType> tempParams = new ArrayList<IDataType>();
		for(IDataType d : input)
		{
			String type = d.getType();
			if(type.equals("Function")) 
			{
				tempParams.add(d);
			}
			else
			{
				params.add(d);
			}
		}
		
		
		
		ArrayList<String> evalParams = new ArrayList<String>();
		for(dataTypes.IDataType param : input)
		{
			ArrayList<String> temp = param.evaluate();
			for(String tempParam : temp)
			{
				evalParams.add(tempParam);
			}
		}
		
		double total = 0;
		int bound = evalParams.size();
		for(int i = 0; i < bound; i++)
		{
			total += Double.parseDouble(evalParams.get(i));
		}
		
		output.add(total + "");
		return output;
	}
}
